{"ast":null,"code":"var _jsxFileName = \"/Users/tasialedet/Documents/GitHub/tcodes-dictionary-app/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Images from \"./Images\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(props) {\n  _s();\n\n  let [newWord, setNewWord] = useState(null);\n  let [results, setResults] = useState(null); //let [images, setImages] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function displayWord(event) {\n    event.preventDefault();\n    findWord();\n    searchPexels();\n  }\n\n  function updateWord(event) {\n    setNewWord(event.target.value);\n  }\n\n  function findWord() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${newWord}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handlePexelsResponse(response) {\n    console.log(response);\n    setImages;\n  }\n\n  function searchPexels() {\n    const pexelsApiKey = \"563492ad6f9170000100000103d287c62c524ccbabfe1b8d2d4cb6bf\";\n    let pexelsUrl = `https://api.pexels.com/v1/search?query=${newWord}`;\n    let headers = {\n      Authorization: `Bearer ${pexelsApiKey}`\n    };\n    axios.get(pexelsUrl, {\n      headers: headers\n    }).then(handlePexelsResponse);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: displayWord,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          className: \"form-control\",\n          placeholder: \"Type your word here\",\n          \"aria-describedby\": \"button-addon2\",\n          autoFocus: true,\n          onChange: updateWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"submit\",\n          id: \"button-addon2\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Images, {\n      images: images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"D62Vw+SUfo7ULEZ51BRuBmmBWXc=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/tasialedet/Documents/GitHub/tcodes-dictionary-app/src/Search.js"],"names":["React","useState","axios","Results","Images","Search","props","newWord","setNewWord","results","setResults","handleResponse","response","data","displayWord","event","preventDefault","findWord","searchPexels","updateWord","target","value","apiUrl","get","then","handlePexelsResponse","console","log","setImages","pexelsApiKey","pexelsUrl","headers","Authorization","images"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACpC,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAApC;AACA,MAAI,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAApC,CAFoC,CAGpC;;AAEA,WAASU,cAAT,CAAwBC,QAAxB,EAAkC;AAChCF,IAAAA,UAAU,CAACE,QAAQ,CAACC,IAAT,CAAc,CAAd,CAAD,CAAV;AACD;;AAED,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,QAAQ;AACRC,IAAAA,YAAY;AACb;;AACD,WAASC,UAAT,CAAoBJ,KAApB,EAA2B;AACzBP,IAAAA,UAAU,CAACO,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAV;AACD;;AACD,WAASJ,QAAT,GAAoB;AAClB,QAAIK,MAAM,GAAI,mDAAkDf,OAAQ,EAAxE;AACAL,IAAAA,KAAK,CAACqB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBb,cAAvB;AACD;;AACD,WAASc,oBAAT,CAA8Bb,QAA9B,EAAwC;AACtCc,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACAgB,IAAAA,SAAS;AACV;;AACD,WAASV,YAAT,GAAwB;AACtB,UAAMW,YAAY,GAChB,0DADF;AAEA,QAAIC,SAAS,GAAI,0CAAyCvB,OAAQ,EAAlE;AACA,QAAIwB,OAAO,GAAG;AAAEC,MAAAA,aAAa,EAAG,UAASH,YAAa;AAAxC,KAAd;AACA3B,IAAAA,KAAK,CAACqB,GAAN,CAAUO,SAAV,EAAqB;AAAEC,MAAAA,OAAO,EAAEA;AAAX,KAArB,EAA2CP,IAA3C,CAAgDC,oBAAhD;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEX,WAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,WAAW,EAAC,qBAHd;AAIE,8BAAiB,eAJnB;AAKE,UAAA,SAAS,EAAE,IALb;AAME,UAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AACE,UAAA,SAAS,EAAC,2BADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,EAAE,EAAC,eAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEV;AAAlB;AAAA;AAAA;AAAA;AAAA,YApBF,eAqBE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEwB;AAAhB;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzDuB5B,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Images from \"./Images\";\n\nexport default function Search(props) {\n  let [newWord, setNewWord] = useState(null);\n  let [results, setResults] = useState(null);\n  //let [images, setImages] = useState(null);\n\n  function handleResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function displayWord(event) {\n    event.preventDefault();\n    findWord();\n    searchPexels();\n  }\n  function updateWord(event) {\n    setNewWord(event.target.value);\n  }\n  function findWord() {\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en/${newWord}`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n  function handlePexelsResponse(response) {\n    console.log(response);\n    setImages\n  }\n  function searchPexels() {\n    const pexelsApiKey =\n      \"563492ad6f9170000100000103d287c62c524ccbabfe1b8d2d4cb6bf\";\n    let pexelsUrl = `https://api.pexels.com/v1/search?query=${newWord}`;\n    let headers = { Authorization: `Bearer ${pexelsApiKey}` };\n    axios.get(pexelsUrl, { headers: headers }).then(handlePexelsResponse);\n  }\n  return (\n    <div className=\"search\">\n      <form onSubmit={displayWord}>\n        <div className=\"input-group mb-2\">\n          <input\n            type=\"search\"\n            className=\"form-control\"\n            placeholder=\"Type your word here\"\n            aria-describedby=\"button-addon2\"\n            autoFocus={true}\n            onChange={updateWord}\n          />\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"submit\"\n            id=\"button-addon2\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n      <Results results={results} />\n      <Images images={images}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}