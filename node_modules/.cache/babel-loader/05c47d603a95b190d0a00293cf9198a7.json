{"ast":null,"code":"var _jsxFileName = \"/Users/tasialedet/Documents/GitHub/tcodes-dictionary-app/src/Meaning.js\";\nimport React from \"react\";\nimport Synonym from \"./Synonym\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meaning(props) {\n  let stringExample = props.meaning.definition.example;\n  let stringExampleT = stringExample.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Meaning\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.meaning.partOfSpeech\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), props.meaning.definitions.map(function (definition, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"SectionName\",\n          children: \"Definition: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"definition\",\n          children: definition.definition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          className: \"SectionName\",\n          children: [\" \", stringExample.charAt(0).toUpperCase().slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"synonym\",\n          children: [/*#__PURE__*/_jsxDEV(Synonym, {\n            synonym: definition.synonyms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = Meaning;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meaning\");","map":{"version":3,"sources":["/Users/tasialedet/Documents/GitHub/tcodes-dictionary-app/src/Meaning.js"],"names":["React","Synonym","Meaning","props","stringExample","meaning","definition","example","stringExampleT","slice","partOfSpeech","definitions","map","index","charAt","toUpperCase","synonyms"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,MAAIC,aAAa,GAAGD,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC,OAA7C;AACA,MAAIC,cAAc,GAACJ,aAAa,CAACK,KAAd,CAAoB,CAApB,CAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAA,gBAAKN,KAAK,CAACE,OAAN,CAAcK;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,EAGGP,KAAK,CAACE,OAAN,CAAcM,WAAd,CAA0BC,GAA1B,CAA8B,UAAUN,UAAV,EAAsBO,KAAtB,EAA6B;AAC1D,0BACE;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA,oBAA8BP,UAAU,CAACA;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,qBACG,GADH,EAEGF,aAAa,CAACU,MAAd,CAAqB,CAArB,EAAwBC,WAAxB,GAAsCN,KAAtC,CAA4C,CAA5C,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,OAAO,EAAEH,UAAU,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAAUH,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAjBA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KA5BuBX,O","sourcesContent":["import React from \"react\";\nimport Synonym from \"./Synonym\";\n\nexport default function Meaning(props) {\n  let stringExample = props.meaning.definition.example;\n  let stringExampleT=stringExample.slice(1)\n  \n  return (\n    <div className=\"Meaning\">\n      <h4>{props.meaning.partOfSpeech}</h4>\n\n      {props.meaning.definitions.map(function (definition, index) {\n        return (\n          <div key={index}>\n            <strong className=\"SectionName\">Definition: </strong>\n            <span className=\"definition\">{definition.definition}</span>\n            <br />\n            <em className=\"SectionName\">\n              {\" \"}\n              {stringExample.charAt(0).toUpperCase().slice(1)}\n            </em>\n            <br />\n            <span className=\"synonym\">\n              <Synonym synonym={definition.synonyms} />\n              <br />\n            </span>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}